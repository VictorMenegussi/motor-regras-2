import { Constructable, UpdateRequestBuilderBase } from '../../odata-common';
import { EntityV4 } from '../entity';
import { DestinationOptions, Destination, DestinationNameAndJwt } from '../../connectivity/scp-cf';
/**
 * Create OData query to update an entity.
 *
 * @typeparam EntityT - Type of the entity to be updated
 */
export declare class UpdateRequestBuilderV4<EntityT extends EntityV4> extends UpdateRequestBuilderBase<EntityT> {
    readonly _entityConstructor: Constructable<EntityT>;
    readonly _entity: EntityT;
    /**
     * Creates an instance of UpdateRequestBuilder.
     *
     * @param _entityConstructor - Constructor type of the entity to be updated
     * @param _entity - Entity to be updated
     */
    constructor(_entityConstructor: Constructable<EntityT>, _entity: EntityT);
    /**
     * Executes the query.
     *
     * @param destination - Destination to execute the request against
     * @param options - Options to employ when fetching destinations
     * @returns A promise resolving to the entity once it was updated
     */
    execute(destination: Destination | DestinationNameAndJwt, options?: DestinationOptions): Promise<EntityT>;
}
//# sourceMappingURL=update-request-builder.d.ts.map