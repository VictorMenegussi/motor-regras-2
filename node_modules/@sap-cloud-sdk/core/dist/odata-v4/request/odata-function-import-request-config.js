"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ODataFunctionImportRequestConfigV4 = void 0;
var odata_common_1 = require("../../odata-common");
var ODataFunctionImportRequestConfigV4 = /** @class */ (function (_super) {
    __extends(ODataFunctionImportRequestConfigV4, _super);
    /**
     * Creates an instance of ODataFunctionImportRequestConfig.
     *
     * @param method - HTTP method for the request
     * @param defaultServicePath - Default path of the service
     * @param functionImportName - The name of the function import.
     * @param parameters - Object containing the parameters with a value and additional meta information
     * @param oDataUri - ODataUri conversion interface at runtime either v2 or v4
     */
    function ODataFunctionImportRequestConfigV4(method, defaultServicePath, functionImportName, parameters, oDataUri) {
        return _super.call(this, method, defaultServicePath, functionImportName, parameters, oDataUri) || this;
    }
    ODataFunctionImportRequestConfigV4.prototype.resourcePath = function () {
        var _this = this;
        return this.functionImportName + "(" + Object.values(this.parameters)
            .map(function (parameter) {
            return parameter.originalName + "=" + _this.oDataUri.convertToUriFormat(parameter.value, parameter.edmType);
        })
            .join(',') + ")";
    };
    ODataFunctionImportRequestConfigV4.prototype.queryParameters = function () {
        return this.prependDollarToQueryParameters({
            format: 'json'
        });
    };
    return ODataFunctionImportRequestConfigV4;
}(odata_common_1.ODataFunctionImportRequestConfig));
exports.ODataFunctionImportRequestConfigV4 = ODataFunctionImportRequestConfigV4;
//# sourceMappingURL=odata-function-import-request-config.js.map